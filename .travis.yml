sudo: false
language: python
python:
- 2.6
- 2.7
- 3.3
- 3.4
- 3.5
- nightly
- pypy

env:
  matrix:
    - WEBFRAMEWORK=django-1.4
    - WEBFRAMEWORK=django-1.5
    - WEBFRAMEWORK=django-1.6
    - WEBFRAMEWORK=django-1.7
    - WEBFRAMEWORK=django-1.8
    - WEBFRAMEWORK=django-1.9
    - WEBFRAMEWORK=django-master
    - WEBFRAMEWORK=flask-0.10
  global:
    - PIP_CACHE="$HOME/.pip_cache"'

matrix:
  exclude:
  - python: 2.6
    env: WEBFRAMEWORK=django-1.7
  - python: 2.6
    env: WEBFRAMEWORK=django-1.8
  - python: 2.6
    env: WEBFRAMEWORK=django-1.9
  - python: 2.6
    env: WEBFRAMEWORK=django-master
  - python: 3.3
    env: WEBFRAMEWORK=django-1.4
  - python: 3.3
    env: WEBFRAMEWORK=django-1.9
  - python: 3.3
    env: WEBFRAMEWORK=django-master
  - python: 3.4
    env: WEBFRAMEWORK=django-1.4
  - python: 3.5
    env: WEBFRAMEWORK=django-1.4
  - python: 3.5
    env: WEBFRAMEWORK=django-1.5
  - python: 3.5
    env: WEBFRAMEWORK=django-1.6
  - python: 3.5
    env: WEBFRAMEWORK=django-1.7
  - python: nightly
    env: WEBFRAMEWORK=django-1.4
  - python: nightly
    env: WEBFRAMEWORK=django-1.5
  - python: nightly
    env: WEBFRAMEWORK=django-1.6
  - python: nightly
    env: WEBFRAMEWORK=django-1.7
  allow_failures:
  - env: WEBFRAMEWORK=django-master
  - python: nightly

addons:
  apt:
    packages:
      - libevent-dev
      - libzmq3-dev
  postgresql: "9.3"

cache:
  directories:
    - $HOME/.pip_cache

before_install:
  - mkdir -p $PIP_CACHE

install:
- pip install -U pip
- pip install -r test_requirements/requirements-$WEBFRAMEWORK.txt --cache-dir $PIP_CACHE
- pip install -r test_requirements/requirements-python-$(python --version 2>&1 | awk -F'[ |.]' 'NR==1{ print $2 }').txt --cache-dir $PIP_CACHE
- if [[ $TRAVIS_PYTHON_VERSION == '3.5' ]]; then pip install -r test_requirements/requirements-asyncio.txt --cache-dir $PIP_CACHE; fi
- if [[ $TRAVIS_PYTHON_VERSION != 'pypy' ]]; then pip install -r test_requirements/requirements-cpython.txt --cache-dir $PIP_CACHE; fi
- if [[ $TRAVIS_PYTHON_VERSION == 'pypy' ]]; then pip install -r test_requirements/requirements-pypy.txt --cache-dir $PIP_CACHE; fi

before_script:
  - psql -c 'create database opbeat_test;' -U postgres

script:
- make test

notifications:
  email: false
  slack:
    secure: LcTTbTj0Px0/9Bs/S/uwbhkdULlj1YVdHnU8F/kOa3bq2QdCTptqB719r6BnzHvW+QGyADvDZ25UncVXFuLuHY67ZYfmyZ/H2cj0nrRSuYdPct0avhVbT/3s50GlNWK5qkfZDuqw6szYTFrgFWJcr5dl7Zf6Vovcvd38uaYOdno=

services:
  - redis-server
  - memcached
